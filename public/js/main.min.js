(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
require('./scripts/parallax');
},{"./scripts/parallax":2}],2:[function(require,module,exports){
{
  // Adopted From: http://thenewcode.com/279/Rotate-Elements-on-Scroll-with-JavaScript
  const blobSVG = document.querySelector('.blob-svg');
  const blobImg = document.querySelector('.blob-img');
  const svgFriction = 0.1;
  const imgFriction = 0.25;
  const blobXPos = '77px';
  
  const throttle = (type, name, obj) => {
    const newObj = obj || window;
    let running = false;
    const tempFunction = () => {
      if (running) { return; }
      running = true;
      requestAnimationFrame( () => {
        newObj.dispatchEvent(new CustomEvent(name));
        running = false;
      });
    };
    newObj.addEventListener(type, tempFunction);
  };
  throttle('scroll', 'optimizedScroll');
  
  window.addEventListener('optimizedScroll', () => {
    if (document.documentElement.clientWidth >= 1000) {
      blobSVG.style.transform = `translate3d(${blobXPos}, -${window.pageYOffset * svgFriction }px, 0)`;
      blobImg.style.transform = `translateY(-${window.pageYOffset * imgFriction }px)`;
    }
  });
}
},{}]},{},[1])

//# sourceMappingURL=main.min.js.map
